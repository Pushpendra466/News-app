{"version":3,"sources":["component/THselection.js","component/Card.js","component/News-card.js","component/TopHeadlines.js","component/Query.js","App.js","serviceWorker.js","index.js"],"names":["THselection","props","handleHome","handleHm","state","country","category","handleChangeCountry","bind","handleChangeCategory","handleChangeQ","handleSubmit","event","this","setState","target","value","handleChangeC","handleChangeCat","q","qFlag","handleQuerySubmit","preventDefault","Navbar","bg","variant","fixed","expand","Brand","onClick","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","disabled","onChange","Form","onSubmit","inline","FormControl","type","placeholder","Button","React","Component","Card","src","image","alt","title","description","publishedAt","url","Newscard","list","news","map","urlToImage","content","apiKey","TopHeadline","isLoaded","console","log","ct","cat","req","Request","fetch","then","response","json","articles","catch","error","prevProps","prevState","Query","handleChangeStartDate","sd","handleChangeEndDate","ed","startDate","Date","sortBy","newsArrayWithDate","str","date","mnth","getMonth","slice","day","getDate","getFullYear","join","min","convertMin","max","convert","handleDateSubmit","e","handleChangeSortBy","App","handleHom","flag","handleSearch","handleCountry","handleCategory","val","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4c00e8f3.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar,NavDropdown,Nav,Form,FormControl,Button } from 'react-bootstrap';\n\nclass THselection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {country: \"in\",\n                       category : \"general\" ,    \n                    };\n    \n        this.handleChangeCountry = this.handleChangeCountry.bind(this);\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n        this.handleChangeQ = this.handleChangeQ.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    handleChangeCountry(event)\n        {\n            \n            this.setState({country: event.target.value , category:this.state.category});\n            this.props.handleChangeC(event.target.value);\n        }\n\n    handleChangeCategory(event){\n            this.setState({country:this.state.country,category: event.target.value});\n            this.props.handleChangeCat(event.target.value);\n        }\n\n    handleChangeQ(event){\n            this.setState({\n                q:event.target.value,\n                qFlag:false\n            })\n          \n            }\n          \n\n    handleSubmit(event){\n              \n                this.props.handleQuerySubmit(this.state.q);\n                this.setState({\n                    // q:''\n                })\n                \n                event.preventDefault();\n            }\n\n    handleHome=()=>{\n        this.props.handleHm()\n    }\n\n    render() {\n        \n        //country\n        //ae ar at au be bg br ca ch cn co cu cz de eg fr gb gr hk hu id ie il \n        //in it jp kr lt lv ma mx my ng nl no nz ph pl pt ro rs ru sa se sg si \n        //sk th tr tw ua us ve za\n    \n        return (\n            \n            <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"lg\">\n            <Navbar.Brand onClick={this.handleHome}>Daily News</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#link\" disabled>Country: </Nav.Link>\n            <select className=\"browser-default custom-select col-md-5 offset-md-0\" value={this.state.country} onChange={this.handleChangeCountry}>\n            <option value=\"ae\">United Arab Emirates </option>\n            <option value=\"ar\">Argentina </option>\n            <option value=\"at\">Austria </option>\n            <option value=\"au\">Australia </option>\n            <option value=\"be\">Belgium </option>\n            <option value=\"bg\">Bulgaria </option>\n            <option value=\"br\">Brazil </option>\n            <option value=\"ca\">Canada </option>\n            <option value=\"ch\">Switzerland </option>\n            <option value=\"cn\">China </option>\n            <option value=\"co\">Colombia </option> \n            <option value=\"cu\">Cuba </option>\n            <option value=\"cz\">Czechia </option> \n            <option value=\"de\">Germany </option>\n            <option value=\"eg\">Egypt </option> \n            <option value=\"fr\">France </option>\n            <option value=\"gb\">United Kingdom </option> \n            <option value=\"gr\">Greece </option>\n            <option value=\"hk\">Hong Kong </option> \n            <option value=\"hu\">Hungary </option>\n            <option value=\"id\">Indonesia </option> \n            <option value=\"ie\">Ireland </option>\n            <option value=\"il\">Israel </option> \n            <option value=\"in\">India </option>\n            <option value=\"it\">Italy </option> \n            <option value=\"jp\">Japan </option>\n            <option value=\"kr\">Korea </option> \n            <option value=\"lt\">Lithuania </option>\n            <option value=\"lv\">Latvia </option> \n            <option value=\"ma\">Morocco </option>\n            <option value=\"mx\">Mexico </option> \n            <option value=\"my\">Malaysia </option>\n            <option value=\"ng\">Nigeria </option>\n            <option value=\"nl\">Netherlands </option> \n            <option value=\"no\">Norway </option>\n            <option value=\"nz\">New Zealand </option> \n            <option value=\"ph\">Philippines </option>\n            <option value=\"pl\">Poland </option> \n            <option value=\"pt\">Portugal </option>\n            <option value=\"ro\">Romania </option> \n            <option value=\"rs\">Serbia </option>\n            <option value=\"ru\">Russian Federation </option> \n            <option value=\"sa\">Saudi Arabia </option>\n            <option value=\"se\">Sweden </option> \n            <option value=\"sg\">Singapore </option>\n            <option value=\"si\">Slovenia </option> \n            <option value=\"sk\">Slovakia </option>\n            <option value=\"th\">Thailand </option>\n            <option value=\"tr\">Turkey </option>  \n            <option value=\"tw\">Taiwan </option>\n            <option value=\"ua\">Ukraine </option> \n            <option value=\"us\">United States of America </option>\n            <option value=\"ve\">Venezuela </option> \n            <option value=\"za\">South Africa </option>\n      </select>\n      <Nav.Link href=\"#home\" disabled>Category:</Nav.Link>\n      <select className=\"browser-default custom-select col-md-4 offset-md-0\" value={this.state.category} onChange={this.handleChangeCategory}>\n       <option value=\"business\"> Business</option>\n       <option value=\"entertainment\"> entertainment</option>\n       <option value=\"general\"> general</option>\n       <option value=\"health\"> health</option>\n       <option value=\"science\"> science</option>\n       <option value=\"sports\"> sports</option>\n       <option value=\"technology\"> technology</option>\n       </select>\n    </Nav>\n    <Form onSubmit={this.handleSubmit} inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" value={this.state.q} onChange={this.handleChangeQ} />\n      <Button variant=\"outline-success\" onClick={this.handleSubmit}>Search</Button>\n    </Form>\n  </Navbar.Collapse>\n</Navbar>\n        \n            </div>\n        );\n\n\n       \n        \n\n    }\n\n\n\n}\n\nexport default THselection;","import React from 'react';\nimport { ExternalLink } from 'react-external-link';\nfunction Card (props){\nreturn(\n    <div className = 'tc bg-white mw7 dib br3 pa3 ma2 '>\n    <img src={props.image} alt=\"\" className=\"w-100 db\"/>\n    <h1>{props.title}</h1>\n    <p>{props.description}</p>\n    <p>{props.publishedAt}</p>\n    <ExternalLink href={props.url}>\n    <span>For more detail Click here</span>\n    </ExternalLink>\n    </div>\n)\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nfunction Newscard (props){\n     let list = props.news.map(news => (\n       <Card title={news.title} description={news.description} image={news.urlToImage} url={news.url} publishedAt={news.publishedAt} content={news.content}/>\n      ))\n   return <div className=\"tc center\">{list}</div>;\n}\nexport default Newscard;","import React from 'react';\nimport Newscard from './News-card';\nconst apiKey = 'a9814ac2dd464010b03fefa6f969132d';\nlet pageSize = '100'; //max is 100 default is 20\n\nclass TopHeadline extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          isLoaded: false,\n          news: [],\n        };\n      }\n      \n     componentDidMount()\n    {\n      console.log('tp' , this.props.country);\n      let ct=this.props.country;\n      let cat=this.props.category;\n      // eslint-disable-next-line\n    let url = 'https://cors-anywhere.herokuapp.com/'+'https://newsapi.org/v2/top-headlines?' +'country='+ct+'&category='+cat+\n    '&' +'pageSize='+pageSize+'&'+'apiKey='+apiKey;\n    let req = new Request(url);\n    fetch(req)\n    .then(response => response.json())\n    .then((news) => {\n      this.setState({\n        isLoaded: true,\n        news: news.articles,\n      })\n    })\n    .catch(error => {\n      console.log(error);\n    });}\n\n\n\n    componentDidUpdate(prevProps, prevState) {\n        // check whether client has changed\n        if (prevProps.country !== this.props.country || prevProps.category!==this.props.category) {\n          let cat=this.props.category;\n          let ct=this.props.country;\n          // eslint-disable-next-line\n        let url = 'https://cors-anywhere.herokuapp.com/'+'https://newsapi.org/v2/top-headlines?'+'country='+ct+'&category='+cat+\n        '&'+'pageSize='+pageSize+'&'+'apiKey='+apiKey;\n        let req = new Request(url);\n        fetch(req)\n        .then(response => response.json())\n        .then((news) => {\n          this.setState({\n            isLoaded: true,\n            news: news.articles,\n          })\n        })\n        .catch(error => {\n          console.log(error);\n        });\n\n\n\n\n        }\n      }\n\n\n    render(){\n  \n        const { isLoaded, news } = this.state;\n        if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <div>\n            \n            <h1 className=\"mt5\">Top Headlines</h1>\n            \n            <Newscard news={news} />\n            \n            </div>\n          );\n        }\n    \n    }\n\n}\n\nexport default TopHeadline;\n","import React from 'react';\nimport Newscard from './News-card';\nconst apiKey = 'a9814ac2dd464010b03fefa6f969132d';\nlet pageSize = '100';\nclass Query extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            news:[],\n            startDate:new Date(),\n            sd:'',\n            ed: '',\n            sortBy:'publishedAt',\n            q:'',\n        }\n        \n    }    \n    \n    componentDidMount(){   \n      if(this.props.q!=='')\n  {let url = 'https://newsapi.org/v2/everything?'+'q='+this.props.q+\n  '&' +'pageSize='+pageSize+'&'+'apiKey='+apiKey;\n  let req = new Request(url);\n  fetch(req)\n  .then(response => response.json())\n  .then((news) => {\n    this.setState({\n      isLoaded: true,\n      news: news.articles,\n      q:this.props.q\n    })\n  })\n  .catch(error => {\n    console.log(error);\n  });}\n  }\n\ncomponentDidUpdate(prevProps,prevState){\n    if(this.props.q!==''){\nif(prevProps.q!==this.props.q)\n{let url = 'https://newsapi.org/v2/everything?'+'q='+this.props.q+\n'&' +'pageSize='+pageSize+'&'+'apiKey='+apiKey;\nlet req = new Request(url);\nfetch(req)\n.then(response => response.json())\n.then((news) => {\n  this.setState({\n    isLoaded: true,\n    news: news.articles,\n    q:this.props.q\n  })\n})\n.catch(error => {\n  console.log(error);\n});\n\n}}\n}\n\nnewsArrayWithDate(){\n  // if(this.state.sd!==''&this.state.ed!=='')\n  {let url = 'https://newsapi.org/v2/everything?'+'q='+this.state.q+\n  '&'+'from='+ this.state.sd +'&'+'to='+this.state.ed+'&'+'sortBy='+this.state.sortBy+'&'+'pageSize='+pageSize+'&'+'apiKey='+apiKey;\n  let req = new Request(url);\n  fetch(req)\n  .then(response => response.json())\n  .then((news) => {\n    this.setState({\n      isLoaded: true,\n      news: news.articles,\n    })\n  })\n  .catch(error => {\n    console.log(error);\n  });}\n}\n\nhandleChangeStartDate=(event)=>{\nthis.setState({\n  sd:event.target.value\n})\n}\n\nhandleChangeEndDate = (event)=>{\n  this.setState({\n    ed:event.target.value\n  })\n}\n\nhandleDateSubmit(){\n  this.newsArrayWithDate();\n}\n\nhandleChangeSortBy(event){\n  this.setState({\n    sortBy:event.target.value\n  })\n  this.newsArrayWithDate();\n}\n\n convert(str) {\n  var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n  return [date.getFullYear(), mnth, day].join(\"-\");\n}\nconvertMin(str){\n  var m = str.getMonth()+1;\n  if(m!==1)\n  {var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() )).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n  return [date.getFullYear(), mnth, day].join(\"-\");}\n  else{\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() )).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2),\n    yr = date.getFullYear()-1;\n  return [yr, mnth, day].join(\"-\");\n  }\n}\n    render(){\n        return (<div >\n          <h1 className=\"mt5\">Search Results for {this.props.q} :</h1>\n          <div >\n          <p className = ' dib pa2'>From</p>\n          <input type=\"date\" \n          className=\"browser-default custom-select col-md-2 offset-md-0\"\n          value={this.state.sd}\n          min={this.convertMin(this.state.startDate)} max={this.convert(this.state.startDate)}\n          onChange={this.handleChangeStartDate} \n          />\n          <p className = ' dib pa2 '>To</p>\n          <input type=\"date\"\n          className=\"browser-default custom-select col-md-2 offset-md-0\"\n          value={this.state.ed}\n          min={this.convertMin(this.state.startDate)} max={this.convert(this.state.startDate)}\n          onChange={this.handleChangeEndDate}\n          />\n        <div className=\"pa2 dib\"><button className = 'f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-dark-gray dib' onClick={()=>this.handleDateSubmit()}>OK</button></div>\n          \n       \n          <p className = ' dib pa2 pl6'>Sort By : </p>\n          <select className=\"browser-default custom-select col-md-2 offset-md-0\" value={this.state.sortBy} onChange={(e)=>this.handleChangeSortBy(e)}>\n           <option value=\"publishedAt\"> publishedAt</option>\n           <option value=\"popularity\"> popularity</option>\n           <option value=\"grelevancy\"> relevancy</option>\n           </select>\n           </div>\n            <Newscard news={this.state.news} />\n            </div> );\n\n    }\n}\nexport default Query;\n","import React from 'react';\nimport './App.css';\nimport THselection from './component/THselection';\nimport TopHeadline from './component/TopHeadlines';\nimport Query from './component/Query';\n\nclass App extends React.Component {\nconstructor(props){\n  super(props);\n  this.state=({\n    flag:false,\n    country:'in',\n    category:'general',\n    q:''\n  })\n  this.handleSearch = this.handleSearch.bind(this);\n  this.handleCountry = this.handleCountry.bind(this);\n  this.handleCategory = this.handleCategory.bind(this);\n}\n\nhandleSearch(val){\n  this.setState({\n    q:val,\n    flag:true\n  })\n}\n\nhandleCountry(val){\n  this.setState({\n    country:val,\n    flag:false\n  });\n}\nhandleCategory(val){\n  this.setState({\n    category:val,\n    flag:false\n  });\n}\n\nhandleHom = ()=>{\n  this.setState({\n    flag:false\n  })\n}\n  render(){\n  if(!this.state.flag)\n  {\n    return (\n      <div>\n      <THselection handleChangeC={this.handleCountry} handleChangeCat={this.handleCategory} handleQuerySubmit={this.handleSearch} handleHm={this.handleHom}/>\n      <TopHeadline country={this.state.country} category={this.state.category}/>\n      </div>\n    );\n  }\nelse \n  {return (\n    <div>\n    <THselection handleChangeC={this.handleCountry} handleChangeCat={this.handleCategory} handleQuerySubmit={this.handleSearch} handleHm={this.handleHom}/>\n    <Query q={this.state.q}/>\n    </div>);\n  }\n\n}\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}